-- utterances and sentences
Utt ::= Utt Punct        # head punct
Utt ::= Conj Utt         # cc head
Utt ::= NP_obl comma Utt # cc punct head
Utt ::= parenth Utt parenth # punct head punct

Utt ::= S
Utt ::= QS
Utt ::= Imp
Utt ::= NP
Utt ::= AP
Utt ::= IP
Utt ::= IAdv
Utt ::= Num

-- sentences
-- plain
S ::= NP_nom VP # nsubj head
S ::= Comma_NP VP # advcl head
S ::= NP_nom VP_sconj VP # nsubj ccomp head
S ::= NP_nom S # nsubj head
-- copulative
S ::= S V_Aux # head aux -- xな
S ::= S NP V_Aux # acl head aux
S ::= NP_nom NP cop V_Aux Part? # nsubj head cop aux mark
S ::= NP_nom NP V_Aux V_Aux? Part? # nsubj head aux aux mark
--e.g X X である to "です"
S ::= S Adp_loc aru # head aux fixed 
-- sentences with adverbials 
S ::= NP_nom Comma_AP VP # nsubj advcl head
S ::= NP_nom Comma_AP S # nsubj advcl head
S ::= NP NP_nom Comma_AP S # obl nsubj advcl head
-- this is just to parse sentence 13, since it gives back a weird analysis
--   ↓NP_nom     ↓NP_nom 
S ::= NP Comma_AP NP Comma_AP # advcl nsubj nsubj head
S ::= Comma_NP Sub2_S VP # nsubj ccomp head
-- sentence with special initial adverbial (from x to x)
S ::= NP_prep S # obl head
-- subordinate clauses: adjective (relative), nominal and coordinate (!)
S ::= Sub_S VP # acl head        
S ::= Sub2_S S # ccomp head
S ::= Sub2_S VP # obl head
S ::= Adj_S S # acl head
-- coordinate clauses 
S ::= S comma VP # advcl punct head
-- S ::= Cor_S VP # ccomp head  (this is replaced by following S)
-- parts of coordinated clauses
-- Cor_S ::= VP comma CConj Adp # head punct cc case (this is replaced by following S)
-- this one replaces last two rules "あるい は" 
-- Be careful because it is actually just a single particle: あるいは
S ::= VP_comma CConj Adp VP # ccomp cc case head 
-- parts of subordinate sentences 
Sub_S ::= S Sconj # head mark
Sub2_S ::= S Conj # head case
-- parts of coordinate sentences (obsolete (?))
-- equivalent to "que"/"that": (彼は君のことが好きだ とって)言っていった 　　
Comma_NP ::= NP comma # head punct
Comma_AP ::= AP comma # head punct
--Cor_S ::= S Conj # acl case      -- という

-- Verb phrases
-- First build the verb and its complements and then add auxilaries (verb flection) to the phrase
VP ::= V
VP ::= NP V # obl head
--VP ::= aux # # 0.001
-- Remember it's SOV order, verb always at the end
VP ::= NP_acc V2 # obj head
VP ::= NP_acc NP_dat V2 # obj obl head
VP ::= NP_dat NP_acc V2 # obl obj head
-- VP ::= NP_acc NP_dat V3 # obj obl head
-- With verbs like "go", "go to X" "X に(ni) 行く(iku)" : アメリカに行く(女の子) 
-- and as any other similar adverbial
VP ::= NP_dat V # obl head
--VP ::= NP_to V # obl head
VP ::= VP V_Aux V_Aux? V_Aux? # head aux aux aux 
--e.g. 取りかえ れば *なら* なかっ ...
VP ::= VP V_Aux Predet V_Aux # head aux fixed aux
-- remember to change here if VP_sconj doesn't work: before the Predet? had a "?"
--e.g. 待っ  て　*い*　ます
VP ::= VP Sconj Predet V_Aux? # head mark fixed aux
--e.g. 言わ   れ    て     い     ます
VP ::= VP V_Aux Sconj Predet V_Aux? # head aux mark fixed aux
--e.g.　さ　れ　て　いる 
VP ::= VP V_Aux V_Aux Sconj Predet V_Aux # head aux aux mark fixed aux
-- Specifically for the progressive tense
VP_sconj ::= VP V_Aux? Sconj # head aux mark
-- VP with comma
-- most likely going to have the て("TE") particle
VP_comma ::= VP comma # head punct
-- remember to change this if VP_sconj doesnt work:
VP_comma ::= VP_sconj comma # head punct
-- in UD the advcl is a coordinated VP
VP ::= VP_comma VP # advcl head
-- Adverbials that modify Verb Phrases 
VP ::= NP_dat VP # advmod head  -- ⭐
VP ::= NP_loc VP # advmod head
-- CHECK
VP ::= NP_to VP # obl head
-- Phrase acting as an adverbial
--VP ::= Adv_C VP # obl head
-- TO DO:
-- VERB + する  (which is also classified a verb)...

-- Adjective clause flexed
Adj_S ::= NP_nom AP_flex # nsubj head
Adj_S ::= NP_nom AP_flex comma # nsubj head punct
-- Adverbial function separated by comma
-- Adv_C ::= NP Adp comma # head case punct    -- なんとか　まで、から、と...
-- Adv_C ::= NP_dat comma # head punct     -- なんとか　に
-- Adv_C ::= NP_loc comma # head punct     -- なんとか　で

-- Noun phrases
NP ::= PN
CN ::= N
-- NP ::= N
NP ::= Pron
NP ::= Num # # 0.1
NP ::= Det # # 0.1
-- if we don't take counters into account then its just Num + Noun 12人　３個 ２枚 > > OK!
NP ::= Num CN # nummod head
NP ::= Det CN # det head
NP ::= N CN # compound head
NP ::= PN CN # compound head
NP ::= Pron CN # nmod head
NP ::= CN Num # nmod head
-- Case NPs: these could be avoided, since UD does not specify any case.
NP_nom ::= NP Adp_nom # head case
-- with comma: 
NP_nom ::= NP Adp_nom comma # head case punct
-- be careful with this: !!
NP_nom ::= CN Adp_nom comma # head case punct
NP_acc ::= NP Adp_acc # head case
--NP_acc ::= NP? NP Adp_acc # obl head case --⭐
NP_dat ::= NP Adp_dat # head case
NP_loc ::= NP Adp_loc # head case
-- CN version
NP_nom ::= CN Adp_nom # head case
NP_acc ::= CN Adp_acc # head case
NP_acc ::= CN Adp_acc # head case
NP_dat ::= CN Adp_dat # head case
NP_loc ::= CN Adp_loc # head case
-- from X to X : X kara X made
NP_kara ::= NP Adp_kara # head case
NP_made ::= NP Adp_made # head case
NP_prep ::= NP_kara NP_made # nmod head
NP_prep ::= NP_kara NP_made comma # nmod head punct
-- nominalizer: VP  の　は
NP_nom ::= VP Sconj Adp_nom # head mark case 
-- for clausal subject
NP_nom ::= S Adp_nom # head case
-- To linearize fixed expression:
--             に  よる  と
NP ::= NP Adp_dat yoru Conj # head case fixed fixed
NP ::= NP Adp_gen # head case
--NP ::= NP Adp # head case -- ⭐
NP ::= NP Part # head mark
-- relative clauses (not used)?
NP_rel ::= S NP # acl head
NP_rel ::= S CN # acl head
-- CN version
NP ::= CN Adp_dat yoru Conj # head case fixed fixed
NP ::= CN Adp_gen # head case
NP ::= CN Adp # head case
NP ::= CN Part # head mark
NP ::= S CN # acl head
-- special
NP_to ::= NP Adp_to # head case
-- for multiple "and" と modifiers
NP ::= NP_to CN # nmod head
NP ::= NP_to Adp_gen # head case
NP ::= NP_loc Adp_gen # head case
-- Adjective modifier
NP ::= AP CN # amod head
-- overall
-- NP ::= NP N # nmod head
NP ::= NP CN # nmod head
-- Adverbs modifying Noun Phrases : this is how it's done in UD (some sentences)
NP ::= Adv NP # advmod head -- ⭐️
-- TO DO: Adverb modifying nominative phrase
-- Dependent clauses
-- S and VP may act as noun modifiers (acl) (みかん を 売っていた) 女の子 -> (VP) NP
NP ::= VP NP # acl head

-- Adjectival phrases
AP ::= A
-- Flexed phrases
-- check ↓ used AP instead of A
AP ::= AP Sconj? V_Aux? V_Aux? V_Aux # head mark aux aux aux
AP ::= AP Sconj? V Sconj? # head mark fixed mark
-- used specificaly (check?)
AP_flex ::= AP Sconj? V_Aux? V_Aux? V_Aux # head mark aux aux aux
AP_flex ::= AP Sconj? Predet Sconj? # head mark fixed mark
-- Adjectives + dative ni に form Advebials
AP ::= AP Adp # head case
AP ::= AP A # amod head
AP ::= Adv AP # advmod head
-- for adjectives like "different FROM" と 違う　と 異なる と 一緒
-- careful with tag "obl"
AP ::= NP_to A # obl head


-- POS tag configurations
#pos AUX cop V_Aux neg
#pos VERB V V2 V3 Predet yoru
#pos NOUN N
#pos ADJ A
#pos PROPN PN
#pos ADV IAdv AdV
#pos ACONJ Aconj
#pos SCONJ Sconj
#pos CCONJ Conj CConj
#pos DET Det IDet
#pos PRON Pron
#pos PART Part int
#pos PUNCT Punct Punct_appos comma quote colon parenth
#pos NUM Num
#pos ADP

-- structural word lexicon: normal categories -- careful Sconj: "no"
#token Adp_nom は が 
#token Adp_acc を
#token Adp_dat に
#token Adp_gen の
#token Adp_loc で
#token Adp_to と
#token Adp_kara から
#token Adp_made まで
#token Adp まで から だけ と のみ
#token IAdv どこ いつ なぜ
#token AdV 最も わずか 現在
#token Det この その あの
#token Pron 彼 僕 誰 彼女 他 私 これ それ
#token Punct . 。？ ！ ? !
#token Punct_appos  : ：
#token Conj と も
#token Sconj て って の  
#token Aconj く
#token CConj また あるいは 又 ところ しかし 然し 一方 および 及び 更に さらに そして それ 其れ すなわち 即ち もしくは
#token Num １ ２ ３ ４ ５ ６ ７ ８ ９ ０ 1 2 3 4 5 6 7 8 9 0
#token Part か 的 っぽく ばかり まで だらけ

-- structural word lexicon: syncategorematic words  -- NEG not used in UD nor past :/  
#token cop な だ です じゃ でし
#token V_Aux させる し べき ます さ れ まし られ される され ません する ない なかっ ません ず た ました れば
#token neg ない なかっ ません ず
#token past た ました
#token aru ある
#token yoru よる
#token int か
#token comma , 、
#token colon : ：
#token quote " 「 」
#token parenth ( ) [ ] （ ） 

-- content word lexicon
#token PN ゴンドラ アダム アメリカ 深セン メキシコ リーブ ポトマック
#token V ある する 処 選択 広がっ 攻撃 なる よる かかる 推定 渡る いる 交換 行か 憤慨 基づく できる でき 存在 実施 話
#token V2 履い 呼ば 綴 言わ 言っ 話 とどめ 熟知 渡る 集め 交換 伝え 連れ 取りかえ 持っ 憤慨 隠し 使用 成し遂げる しれ 生み出す 燃やさ いう
#token V3 あげる 上げる 
#token A 腐っ 小さな 異なる 最初 有名 かなり 珍しけ 明らか 純真な
#token N 証人 たち 力 以前 少年 永遠 注射 市 ニュース ミナレット 警察 不 川 勇気 ら クラス 頭 上流 少女 者 圧勝 芸術 経済 犯罪 資金 可能性 つ 交通 文字 カード リン データ 奥 村 名前 学問 近く 世界 場合 社会 中毒 調査 選挙 現在 前 罰則 中 通常 町 vulcanology 軍 実現 被害 教会 とき 州 作品 それ 海岸 馬鹿 犯人 政治 自動 分 投票 長期 ファンド volcanology 声 間 約 系 説明 通り 有機 主教 こと アトロピン 人気 器 年 家 勝利 投資 命 靴 救急 階層 男の子 神経剤 すべて レトリック 火山 暴力 狭さ ％ 階級 キット 筒 一致 考え 泥 人 策略 月
#token Adv 最も わずか
#token Predet なら いる い
#token Symb $ 円




